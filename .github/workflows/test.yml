name: build-rclone-fork

on:
  push:
    branches:
      - "**"
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: backend/terabox

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # ---- Linux deps ----
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo modprobe fuse
          sudo chmod 666 /dev/fuse
          sudo chown root:$USER /etc/fuse.conf
          sudo apt-get update
          sudo apt-get install -y fuse3 libfuse-dev pkg-config

      # ---- macOS deps ----
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install --cask macfuse

      # ---- Windows deps ----
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          choco install -y winfsp zip
          echo "CGO_ENABLED=1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CGO_CFLAGS=-IC:\Progra~2\WinFsp\inc\fuse" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CGO_LDFLAGS=-LC:\Progra~2\WinFsp\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      # ---- Build ----
      - name: Build rclone (with mount support)
        run: go build -tags cmount -o rclone-${{ runner.os }}-amd64 .

      # ---- Test version ----
      - name: Print rclone version
        run: ./rclone-${{ runner.os }}-amd64 version
        shell: bash

      # ---- Upload artifact ----
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rclone-${{ runner.os }}
          path: ./rclone-${{ runner.os }}-amd64
